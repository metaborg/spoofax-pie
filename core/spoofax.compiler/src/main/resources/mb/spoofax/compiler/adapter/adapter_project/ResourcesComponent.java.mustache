package {{baseResourcesComponent.packageId}};

import dagger.Component;
import mb.resource.ResourceRegistry;
import mb.resource.classloader.ClassLoaderResource;
import mb.resource.classloader.ClassLoaderResourceRegistry;
import mb.resource.hierarchical.HierarchicalResource;
import mb.resource.dagger.ResourceRegistriesProvider;
import mb.spoofax.core.resource.ResourcesComponent;

import java.util.Set;

@{{resourcesScope.qualifiedId}}
@Component(
    modules = {
        {{resourcesModule.qualifiedId}}.class{{#additionalResourcesModules}}{{#-first}}, {{/-first}}
        {{qualifiedId}}.class{{^-last}},{{/-last}}{{/additionalResourcesModules}}
    }
)
public interface {{baseResourcesComponent.id}} extends ResourcesComponent, ResourceRegistriesProvider {
    @Override {{classLoaderResources.classLoaderResources.qualifiedId}} getClassloaderResources();

    @Override @{{qualifier.qualifiedId}} ClassLoaderResourceRegistry getClassLoaderResourceRegistry();

    @Override @{{qualifier.qualifiedId}}("definition-directory") ClassLoaderResource getDefinitionDirectory();

    @Override @{{qualifier.qualifiedId}}("definition-directory") HierarchicalResource getDefinitionDirectoryAsHierarchicalResource();

    @Override @{{qualifier.qualifiedId}} Set<ResourceRegistry> getResourceRegistries();
}
