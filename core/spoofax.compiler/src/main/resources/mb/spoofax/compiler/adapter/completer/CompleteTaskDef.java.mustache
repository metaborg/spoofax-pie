package {{baseCompleteTaskDef.packageId}};

import mb.common.style.StyleName;
import mb.common.util.ListView;
import mb.completions.common.CompletionProposal;
import mb.completions.common.CompletionResult;
import mb.pie.api.ExecContext;
import mb.pie.api.Supplier;
import mb.pie.api.TaskDef;
import org.checkerframework.checker.nullness.qual.Nullable;
import org.spoofax.interpreter.terms.IStrategoTerm;

import javax.inject.Inject;
import java.io.Serializable;
import java.util.Objects;

@{{adapterProject.scope.qualifiedId}}
public class {{baseCompleteTaskDef.id}} implements TaskDef<{{baseCompleteTaskDef.id}}.Input, @Nullable CompletionResult> {

    public static class Input implements Serializable {
        public final Supplier<@Nullable IStrategoTerm> astSupplier;

        public Input(Supplier<IStrategoTerm> astSupplier) {
            this.astSupplier = astSupplier;
        }

        @Override public boolean equals(Object o) {
            if(this == o) return true;
            if(o == null || getClass() != o.getClass()) return false;
            final Input input = (Input)o;
            return astSupplier.equals(input.astSupplier);
        }

        @Override public int hashCode() {
            return Objects.hash(astSupplier);
        }

        @Override public String toString() {
            return "Input(astSupplier=" + astSupplier + ')';
        }
    }

    public static class Output implements Serializable {

    }

    @Inject public {{baseCompleteTaskDef.id}}() {}

    @Override
    public String getId() {
        return "{{baseCompleteTaskDef.id}}";
    }

    @Override
    public @Nullable CompletionResult exec(ExecContext context, Input input) throws Exception {
        // TODO: get the ast in 'completion mode', with placeholders
        @Nullable IStrategoTerm ast = input.astSupplier.get(context);

        return new CompletionResult(ListView.of(
            new CompletionProposal("mypackage", "description", "", "", "mypackage", Objects.requireNonNull(StyleName.fromString("meta.package")), ListView.of(), false),
            new CompletionProposal("myclass", "description", "", "T", "mypackage", Objects.requireNonNull(StyleName.fromString("meta.class")), ListView.of(), false)
        ), true);
    }
}
