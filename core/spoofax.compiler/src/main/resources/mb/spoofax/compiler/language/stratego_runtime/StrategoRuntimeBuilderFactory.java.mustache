package {{baseStrategoRuntimeBuilderFactory.packageId}};

import mb.log.api.LoggerFactory;
import mb.resource.ResourceService;
import mb.resource.hierarchical.HierarchicalResource;
import mb.spoofax.compiler.interfaces.spoofaxcore.StrategoRuntimeBuilderFactory;
import mb.stratego.common.StrategoRuntimeBuilder;

public class {{baseStrategoRuntimeBuilderFactory.id}} implements StrategoRuntimeBuilderFactory {
    private final LoggerFactory loggerFactory;
    private final ResourceService resourceService;
    private final HierarchicalResource definitionDir;

    public {{baseStrategoRuntimeBuilderFactory.id}}(LoggerFactory loggerFactory, ResourceService resourceService, HierarchicalResource definitionDir) {
        this.loggerFactory = loggerFactory;
        this.resourceService = resourceService;
        this.definitionDir = definitionDir;
    }

    @Override public StrategoRuntimeBuilder create() {
        final StrategoRuntimeBuilder builder = new StrategoRuntimeBuilder(loggerFactory, resourceService, definitionDir);
{{#interopRegisterersByReflection}}
        builder.addInteropRegistererByReflection("{{this}}");
{{/interopRegisterersByReflection}}
{{#ctreeRelativePaths}}
        builder.addCtree(definitionDir.appendRelativePath("{{this}}"));
{{/ctreeRelativePaths}}
        builder.withJarParentClassLoader({{baseStrategoRuntimeBuilderFactory.id}}.class.getClassLoader());
{{#addNaBL2Primitives}}
        builder.addLibrary(new mb.nabl2.common.NaBL2PrimitiveLibrary());
{{/addNaBL2Primitives}}
{{#addStatixPrimitives}}
        builder.addLibrary(new mb.statix.common.StatixPrimitiveLibrary());
{{/addStatixPrimitives}}
{{#requiresSpoofax2Primitives}}
        builder.addLibrary(new mb.spoofax2.common.primitive.Spoofax2PrimitiveLibrary(loggerFactory, resourceService));
        builder.addContextObject(new mb.spoofax2.common.primitive.generic.Spoofax2LanguageContext(
            "{{languageProject.project.coordinate.groupId}}",
            "{{languageProject.project.coordinate.artifactId}}",
            "{{languageProject.project.coordinate.versionOrUnspecified}}",
            definitionDir.getPath()
        ));
{{/requiresSpoofax2Primitives}}
{{#requiresConstraintSolverPrimitives}}
        builder.addLibrary(new mb.constraint.common.stratego.ConstraintPrimitiveLibrary(resourceService));
{{/requiresConstraintSolverPrimitives}}
        return builder;
    }
}
