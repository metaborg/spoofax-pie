package {{baseStyleTaskDef.packageId}};

import mb.common.option.Option;
import mb.common.style.Styling;
import mb.jsglr.common.JSGLRTokens;
import mb.pie.api.ExecContext;
import mb.pie.api.ExecException;
import mb.pie.api.Supplier;
import mb.pie.api.TaskDef;
import javax.inject.Inject;
import java.io.IOException;

@{{adapterProject.scope.qualifiedId}}
public class {{baseStyleTaskDef.id}} implements TaskDef<Supplier<Option<JSGLRTokens>>, Option<Styling>> {
    private final {{languageProjectInput.styler.qualifiedId}} styler;

    @Inject public {{baseStyleTaskDef.id}}({{languageProjectInput.styler.qualifiedId}} styler) {
        this.styler = styler;
    }

    @Override public String getId() {
        return "{{baseStyleTaskDef.qualifiedId}}";
    }

    @Override
    public Option<Styling> exec(ExecContext context, Supplier<Option<JSGLRTokens>> tokensSupplier) throws ExecException, IOException, InterruptedException {
        return context.require(tokensSupplier).map(t -> styler.style(t.tokens));
    }
}
