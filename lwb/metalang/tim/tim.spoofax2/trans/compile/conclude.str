module compile/conclude

imports

  signatures/llvm/-
  signatures/llvm-sig

rules
  // TODO: make target triple depend on host
  conclude : LLVMProgram(input) -> LLVMProgram(<conc> (prelude, input))
  with prelude :=
  [ TargetTriple("\"x86_64-unknown-linux-gnu\"")
  , GlobalDef(
      Constant(".int_fmt")
    , Private()
    , [UnnamedAddr(), Constant()]
    , Array("5", Int8())
    , String("\"%ld\\0A\\00\"")
    )
  , GlobalDef(
      Constant(".str_fmt")
    , Private()
    , [UnnamedAddr(), Constant()]
    , Array("4", Int8())
    , String("\"%s\\0A\\00\"")
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Pointer()
    , Constant("malloc")
    , [ParamUnnamed(Int64(), [])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Void()
    , Constant("free")
    , [ParamUnnamed(Pointer(), [])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Int32()
    , Constant("puts")
    , [ParamUnnamed(Pointer(), [NoCapture()])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Void()
    , Constant("exit")
    , [ParamUnnamed(Int32(), [])]
    , [NoReturn(), NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Int32()
    , Constant("printf")
    , [ParamUnnamed(Pointer(), [NoCapture()]), Vararg()]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Int64()
    , Constant("record_new")
    , [ParamUnnamed(Int64(), []), Vararg()]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Int64()
    , Constant("record_write")
    , [ParamUnnamed(Int64(), []), ParamUnnamed(Int64(), []), ParamUnnamed(Int64(), [])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Int64()
    , Constant("record_read")
    , [ParamUnnamed(Int64(), []), ParamUnnamed(Int64(), [])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Void()
    , Constant("record_delete")
    , [ParamUnnamed(Int64(), [])]
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Void()
    , Constant("gc_init")
    , []
    , [NoUnwind()]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Pointer()
    , Constant("gc_alloc")
    , [ParamUnnamed(Int64(), [])]
    , [NoUnwind(), InaccessibleMemOnly(), AllocKind("\"alloc,uninitialized\""), AllocSize("0"), AllocFamily("\"malloc\"")]
    )
  , FunDecl(
      DefaultLinkage()
    , DefaultCConv()
    , Void()
    , Constant("gc_collect")
    , []
    , [NoUnwind()]
    )
  , FunDef(
      DefaultLinkage()
    , DefaultCConv()
    , Int32()
    , Constant("main")
    , []
    , []
    , [ Block(
          NoLabel()
        , [Expression(
             Call(DefaultTail(), TailCConv(), Void(), ConstAtom(Constant("start")), [], [])
           )]
        , Ret(TypedAtom(Int32(), Literal(Int("0"))))
        )
      ]
    )
  ]