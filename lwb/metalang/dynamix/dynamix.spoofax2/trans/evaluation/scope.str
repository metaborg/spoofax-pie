module evaluation/scope

imports  
  evaluation/eval
  
signature
  sorts MScope
  constructors MScope : List(Hashtable) -> MScope
  
rules
  // scope-new :: ? -> MScope
  scope-new = !MScope([<new-hashtable>])
  
  // scope-set(|string, MRuntimeValue) :: MScope -> MScope
  scope-set(|k, v): s@MScope([cur|_]) -> s
    with <hashtable-put(|k, v)> cur
    
  // scope-get(|string) :: MScope -> MRuntimeValue
  scope-get(|k): MScope(vals) -> <getfirst(hashtable-get(|k))> vals
  
  // scope-push :: MScope -> MScope
  scope-push: MScope(v) -> MScope([<new-hashtable>|v])
  
  // scope-debug :: MScope -> List(?)
  scope-debug: MScope(v) -> <map(hashtable-getlist); concat> v
  
  // scope-pop :: MScope -> MScope
  scope-pop: MScope([_|v]) -> MScope(v)
  
  