module statsem/part/language_adapter

imports

  statsem/part
  statsem/expr
  statsem/expr/menu_item
  statsem/util

  signatures/part/language_adapter-sig

rules

  partOk(s, AdapterSection(options)) :-
    adapterOptionsOk(s, options).

  adapterOptionOk : scope * AdapterOption
  adapterOptionsOk maps adapterOptionOk(*, list(*))

  adapterOptionOk(s, BaseResourcesComponent(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendResourcesComponent(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, BaseResourcesModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendResourcesModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, AdditionalResourcesModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.

  adapterOptionOk(s, BaseComponent(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendComponent(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, BaseModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, AdditionalModule(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.

  adapterOptionOk(s, BaseInstance(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendInstance(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, BaseParticipant(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.
  adapterOptionOk(s, ExtendParticipant(e)) :-
    typeOfExpr(s, e) == JAVA_ID() | error $[Expected Java type identifier]@e.

rules

  partOk(s, MainMenu(e_menu_items)) :-
    exprsAreMenuItems(s, e_menu_items).
  partOk(s, ResourceContextMenu(e_menu_items)) :-
    exprsAreMenuItems(s, e_menu_items).
  partOk(s, EditorContextMenu(e_menu_items)) :-
    exprsAreMenuItems(s, e_menu_items).

rules

  partOk(s, ReferenceResolutionSection(options)) :-
    referenceResolutionOptionsOk(s, options).

  referenceResolutionOptionOk : scope * ReferenceResolutionOption
  referenceResolutionOptionsOk maps referenceResolutionOptionOk(*, list(*))

  referenceResolutionOptionOk(s, ReferenceResolutionVariant(v)) :-
    referenceResolutionVariantOk(s, v).

  referenceResolutionVariantOk : scope * ReferenceResolutionVariant
  referenceResolutionVariantOk(s, ReferenceResolutionStrategoVariant(e)) :-
    typeOfExpr(s, e) == STRATEGY() | error $[Expected Stratego strategy identifier]@e.

rules

  partOk(s, HoverSection(options)) :-
    hoverOptionsOk(s, options).

  hoverOptionOk : scope * HoverOption
  hoverOptionsOk maps hoverOptionOk(*, list(*))

  hoverOptionOk(s, HoverVariant(v)) :-
    hoverVariantOk(s, v).

  hoverVariantOk : scope * HoverVariant
  hoverVariantOk(s, HoverStrategoVariant(e)) :-
    typeOfExpr(s, e) == STRATEGY() | error $[Expected Stratego strategy identifier]@e.

rules

  partOk(s, DependOnRv32Im(e)) :-
    typeOfExpr(s, e) == BOOL() | error $[Expected boolean]@e.
