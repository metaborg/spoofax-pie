module part/language

imports

  part
  expr

context-free sorts

  Sdf3Option Sdf3Source Sdf3FilesOption Sdf3PrebuiltOption
  Sdf3ParseTableGeneratorOption

context-free syntax

  Part.Sdf3Section = <sdf3 {
  <{Sdf3Option "\n"}*>
}>
  Sdf3Option.Sdf3Source = <source = <Sdf3Source>>

  Sdf3Source.Sdf3Files  = <files {
  <{Sdf3FilesOption "\n"}*>
}>
  Sdf3FilesOption.Sdf3FilesMainSourceDirectory       = <main-source-directory = <Expr>>
  Sdf3FilesOption.Sdf3FilesMainFile                  = <main-file = <Expr>>

  Sdf3Source.Sdf3Prebuilt = <prebuilt {
  <{Sdf3PrebuiltOption "\n"}*>
}>
  Sdf3PrebuiltOption.Sdf3PrebuiltParseTableAtermFile     = <parse-table-aterm-file = <Expr>>
  Sdf3PrebuiltOption.Sdf3PrebuiltParseTablePersistedFile = <parse-table-persisted-file = <Expr>>

  // TODO: move into source after CC lab.
  Sdf3Option.Sdf3ParseTableGeneratorSection = <parse-table-generator {
  <{Sdf3ParseTableGeneratorOption "\n"}*>
}>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorDynamic = <dynamic = <Expr>>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorDataDependent = <data-dependent = <Expr>>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorLayoutSensitive = <layout-sensitive = <Expr>>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorSolveDeepConflicts = <solve-deep-conflicts = <Expr>>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorCheckOverlap = <check-overlap = <Expr>>
  Sdf3ParseTableGeneratorOption.Sdf3ParseTableGeneratorCheckPriorities = <check-priorities = <Expr>>

context-free sorts

  EsvOption EsvSource EsvFilesOption EsvPrebuiltOption

context-free syntax

  Part.EsvSection = <esv {
  <{EsvOption "\n"}*>
}>
  EsvOption.EsvSource = <source = <EsvSource>>

  EsvSource.EsvFiles  = <files {
  <{EsvFilesOption "\n"}*>
}>
  EsvFilesOption.EsvFilesMainSourceDirectory       = <main-source-directory = <Expr>>
  EsvFilesOption.EsvFilesMainFile                  = <main-file = <Expr>>
  EsvFilesOption.EsvFilesIncludeDirectory          = <include-directory = <Expr>>
  EsvFilesOption.EsvFilesIncludeLibspoofax2Exports = <include-libspoofax2-exports = <Expr>>

  EsvSource.EsvPrebuilt = <prebuilt {
  <{EsvPrebuiltOption "\n"}*>
}>
  EsvPrebuiltOption.EsvPrebuiltFile = <file = <Expr>>

context-free sorts

  StatixOption StatixSource StatixFilesOption StatixPrebuiltOption

context-free syntax

  Part.StatixSection = <statix {
  <{StatixOption "\n"}*>
}>
  StatixOption.StatixSource = <source = <StatixSource>>

  StatixSource.StatixFiles  = <files {
  <{StatixFilesOption "\n"}*>
}>
  StatixFilesOption.StatixFilesMainSourceDirectory = <main-source-directory = <Expr>>
  StatixFilesOption.StatixFilesMainFile            = <main-file = <Expr>>
  StatixFilesOption.StatixFilesIncludeDirectory    = <include-directory = <Expr>>

  StatixSource.StatixPrebuilt = <prebuilt {
  <{StatixPrebuiltOption "\n"}*>
}>
  StatixPrebuiltOption.StatixPrebuiltSpecAtermDirectory = <spec-aterm-directory = <Expr>>

  // TODO: move into source after CC lab.
  StatixOption.StatixSdf3SignatureGen = <sdf3-statix-signature-generation = <Expr>>

context-free sorts

  StrategoOption StrategoSource StrategoFilesOption

context-free syntax

  Part.StrategoSection = <stratego {
  <{StrategoOption "\n"}*>
}>
  StrategoOption.StrategoSource = <source = <StrategoSource>>

  StrategoSource.StrategoFiles  = <files {
  <{StrategoFilesOption "\n"}*>
}>
  StrategoFilesOption.StrategoFilesMainSourceDirectory      = <main-source-directory = <Expr>>
  StrategoFilesOption.StrategoFilesMainFile                 = <main-file = <Expr>>
  StrategoFilesOption.StrategoFilesIncludeDirectory         = <include-directory = <Expr>>

  // TODO: move into source after CC lab.
  StrategoOption.StrategoSdf3StatixExplicationGen = <sdf3-statix-explication-generation = <Expr>>

  StrategoOption.StrategoLanguageStrategyAffix = <language-strategy-affix = <Expr>>
  StrategoOption.StrategoOutputJavaPackageId = <output-java-package = <Expr>>

context-free sorts

  DynamixOption DynamixSource DynamixFilesOption DynamixPrebuiltOption

context-free syntax

  Part.DynamixSection = <dynamix {
  <{DynamixOption "\n"}*>
}>
  DynamixOption.DynamixSource = <source = <DynamixSource>>
  DynamixOption.DynamixMainRuleName = <main-rule-name = <Expr>>

  DynamixSource.DynamixFiles  = <files {
  <{DynamixFilesOption "\n"}*>
}>
  DynamixFilesOption.DynamixFilesMainSourceDirectory = <main-source-directory = <Expr>>
  DynamixFilesOption.DynamixFilesMainFile            = <main-file = <Expr>>

  DynamixSource.DynamixPrebuilt = <prebuilt {
  <{DynamixPrebuiltOption "\n"}*>
}>
  DynamixPrebuiltOption.DynamixPrebuiltSpecAtermDirectory = <spec-aterm-directory = <Expr>>
