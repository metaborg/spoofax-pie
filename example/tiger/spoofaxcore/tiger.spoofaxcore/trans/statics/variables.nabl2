module statics/variables

imports signatures/-
imports statics/nabl-lib
imports statics/base

rules // variable declarations

  // Local variables: In the expression [let ... vardec ... in exp end], 
  // the scope of the declared variable starts just after its vardec 
  // and lasts until the end.

  Dec[[ VarDec(x, t, e) ^ (s, s_outer) ]] :=
     [[ t ^ (s_outer) : ty1 ]],
     [[ e ^ (s_outer) : ty2 ]], // ~1
     ty2 <? ty1 | error $[type mismatch got [ty2] where [ty1] expected] @ e,
     Var{x} <- s, 
     Var{x} : ty1 !.
     
  Dec[[ VarDecNoType(x, e) ^ (s, s_outer) ]] :=
     [[ e ^ (s_outer) : ty ]],
     ty != NIL() | error $[explicit type expected for variable initialized with nil],
     Var{x} <- s, 
     Var{x} : ty !.
         
rules // variable references
  
  [[ Var(x) ^ (s) : ty ]] :=
     Var{x} -> s,  // declare x as variable reference
     Var{x} |-> d, // check that x resolves to a declaration
     d : ty.       // type of declaration is type of reference
 
rules // statements

  [[ Assign(e1, e2) ^ (s) : UNIT() ]] :=
     [[ e1 ^ (s) : ty1 ]], 
     [[ e2 ^ (s) : ty2 ]],
     ty2 <? ty1 | error $[type mismatch got [ty2] where [ty1] expected] @ e2.  
     