module statics/numbers

imports signatures/-
imports statics/nabl-lib
imports statics/base

rules // literals    

  [[ Int(i) ^ (s) : INT() ]].  
  
rules // operators
     
  [[ Uminus(e) ^ (s) : INT() ]] :=
     [[ e ^ (s) : INT() ]].
          
  [[ Divide(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : INT() ]], [[ e2 ^ (s): INT() ]].
     
  [[ Times(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : INT() ]], [[ e2 ^ (s): INT() ]].
     
  [[ Minus(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : INT() ]], [[ e2 ^ (s): INT() ]].
     
  [[ Plus(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : INT() ]], [[ e2 ^ (s): INT() ]].
        
  [[ Eq(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]],
     [[ e2 ^ (s): ty2 ]],
     ty2 <? ty1.
//     ty1 == ty2.
   //((ty1 == ty2) ; ((ty1 <? ty2) ; (ty2 <? ty1))).
        
  [[ Neq(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty2 <? ty1.
//     ty1 == ty2.
   //((ty1 == ty2) ; ((ty1 <? ty2) ; (ty2 <? ty1))).
        
  [[ Gt(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
        
  [[ Lt(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
        
  [[ Geq(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
        
  [[ Leq(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
        
  [[ Or(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
        
  [[ And(e1, e2) ^ (s) : INT() ]] :=
     [[ e1 ^ (s) : ty1 ]], [[ e2 ^ (s): ty2 ]],
     ty1 == ty2.
     
     