module dynamics/frames/nabl2/arrays

imports
  dynamics/frames/nabl2/nabl2-link

signature
  sort aliases
    ArrId = Scope
  constructors
    ArrayScope: Int -> ArrId
    ElemOcc: ArrId * Int -> Occurrence
    
  arrows
    newArrayFrame(Int, Type) --> Frame
    newArrayFrame(Int, Type, Val) --> Frame
    mkArrayElemOcc(ArrId, Int) --> Occurrence
    mkArraySlots(ArrId, Type, Int, Val) --> Map(Occurrence, Val)
    mkArrayElemAddr(Frame, Int) --> Addr
        
rules

  newArrayFrame(length, ty) --> newArrayFrame(length, ty, default(ty))
  
  newArrayFrame(length, ty, val) --> F
  where
    ArrayScope(fresh) => s;
    mkArraySlots(s, ty, subI(length, 1), val) --> slots;
    newScope(s, allkeys(slots), [], {}, {}) --> _;
    frame(s, [], slots) --> F
  
  mkArraySlots(arr, ty, -1, val) --> {}
  
  mkArraySlots(arr, ty, idx, val) --> { occ |--> val, slots}
  where
    idx != -1;
    mkArrayElemOcc(arr, idx) --> occ;
    setType(occ, ty) --> _;
    mkArraySlots(arr, ty, subI(idx, 1), val) --> slots
  
  mkArrayElemOcc(arr, idx) --> ElemOcc(arr, idx)
  
  mkArrayElemAddr(F, idx) --> Addr(F, mkArrayElemOcc(scopeOf(F), idx))
