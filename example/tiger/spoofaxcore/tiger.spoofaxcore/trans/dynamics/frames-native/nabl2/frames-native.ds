module dynamics/frames-native/nabl2/frames-native

imports
  dynamics/frames-native/nabl2/scopegraph-native
  dynamics/stdlib/native/shared-terms
  
signature
  native datatypes
    "com.oracle.truffle.api.object.DynamicObject" as Frame {}
    
  components
    F: Frame
    FS: (Frame * Frame)
  
  native operators
    scopeOfFrame: Frame                      -> Scope     {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.ScopeOfFrame")}
    newframe    : Scope                      -> Frame     {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.NewFrame2")}
    link        : Frame * FrameLink          -> Frame     {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.AddFrameLink")}
    clone       : Frame                      -> Frame     {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.CloneFrame")}
    eqFrames    : Frame * Frame              -> Bool      {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.FramesEqual")}
    lookup      : Frame * Occurrence         -> Addr      {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.Lookup")}
    get         : Addr                       -> Val       {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.GetAtAddr")}
    get         : Frame * Occurrence         -> Val       {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.GetFrameSlot")}
    set         : Addr * Val                 -> Val       {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.SetAtAddr")}
    set         : Frame * Occurrence * Val   -> Val       {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.nodes.SetFrameSlot")}
    
  arrows
    default(Type) --> Val
  
  sorts
    Addr {value, class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.Addr")}
  
  constructors
    Addr: Frame * Occurrence -> Addr {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.FrameAddr")}

  sorts
    FrameLink {value, class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.FLink")}
  
  constructors
    L : Label * Frame -> FrameLink {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.FrameEdgeLink")}
    L : Label * Occurrence * Frame -> FrameLink {class("org.metaborg.meta.lang.dynsem.interpreter.nabl2.f.FrameImportLink")}
  
  arrows
    frame(Scope, List(FrameLink)) --> Frame
    framed(AST, List(FrameLink)) --> Frame
    links(Frame, List(FrameLink)) --> Frame
    
rules
  framed(t, links) --> frame(scopeOfTerm(t), links)
  
  frame(s, links) --> links(newframe(s), links)
  
  links(F, []) --> F
  
  links(F, [l|ls]) --> links(F, ls)
  where
    link(F, l) => _
    
  
