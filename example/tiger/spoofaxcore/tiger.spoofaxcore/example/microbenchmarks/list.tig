//https://github.com/smarr/are-we-fast-yet/blob/master/benchmarks/Java/src/List.java
for i := 0 to 30
do
  (
  timeGo();
  let
    type Cons = { val: int, next : Cons}
    
    function length(l : Cons): int =
      if l.next = nil
      then
        1
      else
        1 + length(l.next)
        
    function makeList(length: int): Cons =
      if length = 0
      then
        nil
      else
        Cons{ val = length, next = makeList(length - 1) }
    
    function isShorterThan(x : Cons, y : Cons): int =
      let
        var xTail : Cons := x
        var yTail : Cons := y
        var isShorter : int := 0
      in
        while yTail <> nil
        do (
          if xTail = nil
          then (
            isShorter := 1;
            break
          ) else (
            xTail := xTail.next;
            yTail := yTail.next
          )
        );
        isShorter
      end
    
    function tail(x : Cons, y : Cons, z : Cons) : Cons =
      if isShorterThan(y, x)
      then
        tail(tail(x.next, y, z),
               tail(y.next, z, x),
               tail(z.next, x, y))
      else
        z
  in
    let
      var result : Cons := tail(makeList(15), makeList(10), makeList(6))
    in
      length(result) // 10
    end
  end;
  timeStop()
)