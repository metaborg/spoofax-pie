module static-semantics/webdsl-expand

imports
  static-semantics/entities/annotations

  static-semantics/types/built-ins

  static-semantics/webdsl
  static-semantics/webdsl-actions
  static-semantics/webdsl-types
  static-semantics/webdsl-ui

rules

  templateElementOk(s, _, s_pha, DeriveNoFromNoFor(p, body)) :-
    deriveStringOk(p),
    deriveBodyOk(s, s_pha, body),
    false | error $[Cannot derive for non-entity types, use syntax "derive <pagetype> from <var> { ... }"].

  templateElementOk(s, _, s_pha, Derive(p, exp, props, body)) :- { t }
    deriveStringOk(p),
    t == typeOfExp(s, exp),
    typeCompatible(t, entity(s)) | error $[Cannot derive for non-entity types] @exp,
    derivePropertiesOk(s, t, p, props),
    deriveBodyOk(s, s_pha, body).

  deriveStringOk : string
  deriveStringOk(_) :- false | error $[Can only derive "viewPage", "createPage" or "editPage"].
  deriveStringOk("viewPage").
  deriveStringOk("createPage").
  deriveStringOk("editPage").

  derivePropertiesOk maps derivePropertyOk(*, *, *, list(*))
  derivePropertyOk : scope * TYPE * string * DeriveProperty
  derivePropertyOk(_, _, _, _) :- try { false } | warning $[This element is not yet supported].
  derivePropertyOk(s, t_ent, _, DeriveDefault(prop)) :- { t }
    t == typeOfProperty(s, t_ent, prop) | error $[Entity [t_ent] does not have a property named [prop]],
    isMutableProperty(t_ent, prop) | error $[Property [prop] is not mutable].

  derivePropertyOk(s, t_ent, "viewPage", DeriveDefault(prop)) :- { t }
    t == typeOfProperty(s, t_ent, prop) | error $[Entity [t_ent] does not have a property named [prop]].

  deriveBodyOk : scope * scope * DeriveBody
  deriveBodyOk(s, s_pha, DeriveBody(elements)) :- deriveBodyElementsOk(s, s_pha, elements).

  deriveBodyElementsOk maps deriveBodyElementOk(*, *, list(*))
  deriveBodyElementOk : scope * scope * DeriveBodyElement
  deriveBodyElementOk(_, _, _) :- try { false } | warning $[This element is not yet supported].

rules

  defOk(s, DeriveCrud(ent)) :- { t }
    t == typeOfSort(s, SimpleSort(ent)) | error $[The entity [ent] does not exist],
    typeCompatible(t, entity(s)) | error $[The entity [ent] does not exist].
