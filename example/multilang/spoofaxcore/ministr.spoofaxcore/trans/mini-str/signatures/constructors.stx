module mini-str/signatures/constructors

imports
  cons-type-interface/types
  cons-type-interface/sorts
  cons-type-interface/constructors

  signatures/mini-str/mini-str-sig
  mini-str/signatures/sorts

rules

  conssOk maps consOk(*, list(*))

  consOk: scope * ConstructorDef

  consOk(s, NoArgs(cn, sn)) :- {T}
    typeOfSort(s, sn) == T,
    declareCons(s, T, cn, []).

  consOk(s, WithArgs(cn, p, sn)) :- {T T1}
    typeOfSort(s, sn) == T,
    sortsOfParams(s, p) == T1,
    declareCons(s, T, cn, T1).

rules

  sortsOfParams maps sortOfParam(*, list(*)) = list(*)

  sortOfParam: scope * ArgSort -> TYPE

  sortOfParam(s, Sort(n)) = typeOfSort(s, n).
  sortOfParam(s, SOpt(n))  = TOPT(typeOfSort(s, n)).
  sortOfParam(s, SIter(n)) = TITER(typeOfSort(s, n)).
  sortOfParam(s, SStar(n)) = TSTAR(typeOfSort(s, n)).
